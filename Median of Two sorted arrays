#include <bits/stdc++.h>
using namespace std;



class Solution
{
    public:
    //Function to find the median of the two arrays when they get merged.
    int findMedian(int arr[], int n, int brr[], int m)
    {
        int low = 0,high = n;
        
        while(low<=high){
            int l1 = (low+high)/2;
            int l2 = (n+m+1)/2-l1;
            int max1,max2,min1,min2;
            
            (l1==0)?max1=INT_MIN:max1=arr[l1-1];
            (l2==0)?max2=INT_MIN:max2=brr[l2-1];
            (l1==n)?min1=INT_MAX:min1=arr[l1];
            (l2==m)?min2=INT_MAX:min2=brr[l2];
            
            if(max1<=min2 && max2<=min1){
                if((n+m)%2==0)
                return (max(max1,max2)+min(min1,min2))/2;
                
                else
                return max(max1,max2);
            }
            
            else if(max1>min2)
            high = l1-1;
            
            else
            low = l1+1;
        }
        return -1;
    }
};


int main() {
	int t;
	cin >> t;
	
	while(t--){
	    int n, m;
	    cin >> n >> m;
	    int arr[n];
	    int brr[m];
	    
	    for(int i = 0;i<n;i++){
	        cin >> arr[i];
	    }
	    
	    for(int i = 0;i<m;i++){
	        cin >> brr[i];
	    }
	    Solution obj;
	    if(n < m)
	        cout << obj.findMedian(arr, n, brr, m) << endl;
	   else
	        cout << obj.findMedian(brr, m, arr, n) << endl;
	    
	}

}
